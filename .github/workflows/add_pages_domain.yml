name: Add Pages Custom Domain
permissions:
  contents: read
  actions: read
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      domain:
        description: 'Custom domain to add'
        required: true
        default: 'dashboard.theedges.work'
      project:
        description: 'Pages project name'
        required: true
        default: 'theedges-dashboard'

jobs:
  add-domain:
    runs-on: ubuntu-latest

    steps:
      - name: Add custom domain to Pages project
        env:
          CF_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          DOMAIN="${{ inputs.domain }}"
          PROJECT="${{ inputs.project }}"

          echo "=== Adding custom domain to Pages project ==="
          echo "Project: ${PROJECT}"
          echo "Domain: ${DOMAIN}"

          RESPONSE=$(curl -s -X POST \
            "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${PROJECT}/domains" \
            -H "Authorization: Bearer ${CF_API_TOKEN}" \
            -H "Content-Type: application/json" \
            --data "{\"name\": \"${DOMAIN}\"}")

          echo "$RESPONSE" | jq .

          SUCCESS=$(echo "$RESPONSE" | jq -r '.success')

          if [ "$SUCCESS" = "true" ]; then
            echo "✅ Custom domain added successfully!"

            # Wait for verification
            echo "Waiting for domain verification..."
            sleep 10

            # Check status
            STATUS_RESPONSE=$(curl -s \
              "https://api.cloudflare.com/client/v4/accounts/${CF_ACCOUNT_ID}/pages/projects/${PROJECT}/domains" \
              -H "Authorization: Bearer ${CF_API_TOKEN}")

            echo "=== Domain Status ==="
            echo "$STATUS_RESPONSE" | jq -r '.result[] | "\(.name): \(.status)"'

            # Test the dashboard
            echo ""
            echo "=== Testing Dashboard ==="
            sleep 5
            curl -sL "https://${DOMAIN}" | grep -o "<title>.*</title>" || echo "Content check: waiting for propagation..."

          else
            echo "❌ Failed to add custom domain"
            ERROR=$(echo "$RESPONSE" | jq -r '.errors[0].message')
            echo "Error: ${ERROR}"
            exit 1
          fi

      - name: Verify dashboard access
        run: |
          DOMAIN="${{ inputs.domain }}"

          echo "Waiting 15 seconds for full propagation..."
          sleep 15

          echo "=== Final Verification ==="

          # DNS check
          echo "DNS Resolution:"
          dig +short "${DOMAIN}" || echo "DNS lookup failed"

          # HTTP check
          echo ""
          echo "HTTP Status:"
          curl -I "https://${DOMAIN}" 2>&1 | head -5 || echo "HTTP check failed"

          # Content check
          echo ""
          echo "Content Check:"
          if curl -sL "https://${DOMAIN}" | grep -q "02LUKA UI"; then
            echo "✅ Dashboard is serving Boss-UI correctly!"
          else
            echo "⚠️  Dashboard content verification pending (may need more time for propagation)"
          fi