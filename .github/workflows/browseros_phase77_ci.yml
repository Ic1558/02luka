name: Phase 7.7 â€“ BrowserOS Verification (CI)

on:
  workflow_dispatch: {}
  push:
    paths:
      - 'knowledge/mcp/browseros.cjs'
      - 'tools/browseros.sh'
      - 'knowledge/web_actions_rollup*.cjs'
      - 'tools/test_browseros_phase77.sh'
      - '.github/workflows/browseros_phase77_ci.yml'
  pull_request:
    paths:
      - 'knowledge/mcp/browseros.cjs'
      - 'tools/browseros.sh'
      - 'knowledge/web_actions_rollup*.cjs'
      - 'tools/test_browseros_phase77.sh'
      - '.github/workflows/browseros_phase77_ci.yml'

jobs:
  verify:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 5s
          --health-timeout 3s
          --health-retries 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install jq (for rollup checks)
        run: sudo apt-get update && sudo apt-get install -y jq

      # --- CI mocks: we DO NOT commit these files. They exist only during this job. ---
      - name: Create CI mock for tools/browseros.sh
        shell: bash
        run: |
          mkdir -p tools g/reports
          # Keep original if present (not required in CI)
          if [ -f tools/browseros.sh ]; then
            cp tools/browseros.sh tools/browseros.sh.bak || true
          fi
          cat > tools/browseros.sh <<'EOS'
          #!/usr/bin/env bash
          # CI mock: reads JSON on stdin and prints a plausible success response
          set -euo pipefail
          REQ="$(cat -)"
          NOW=$(date -Iseconds)
          cat <<JSON
          {
            "ok": true,
            "steps": [{"op":"mock","ms":123}],
            "result": {"mock": true},
            "perf": {"totalMs": 123},
            "ts": "${NOW}"
          }
          JSON
          EOS
          chmod +x tools/browseros.sh

      - name: Create CI mock Redis worker (browseros_worker.cjs)
        shell: bash
        run: |
          mkdir -p knowledge/ci g/reports
          cat > knowledge/ci/browseros_worker.cjs <<'EOS'
          // Minimal CI worker: subscribes ai.action.request; writes ai.action.result:<id> and JSONL log.
          const { createClient } = require('redis');
          const fs = require('fs');

          async function main() {
            const sub = createClient();
            const pub = createClient();

            await sub.connect();
            await pub.connect();

            await sub.subscribe('ai.action.request', async (msg) => {
              try {
                const req = JSON.parse(msg);
                const id = req.id || `ci_${Date.now()}`;
                const result = {
                  id,
                  ok: true,
                  result: { data: { mock: true }, perf: { totalMs: 111 } },
                  ts: new Date().toISOString()
                };

                await pub.set(`ai.action.result:${id}`, JSON.stringify(result), { EX: 120 });

                const line = JSON.stringify({
                  id,
                  caller: req.caller || 'CI',
                  tool: req.tool || 'browseros.workflow',
                  ok: true,
                  perf: { totalMs: 111 },
                  domains: (req.params && req.params.allowDomains) || [],
                  ts: result.ts,
                  status: 'ok'
                }) + '\n';
                fs.mkdirSync('g/reports', { recursive: true });
                fs.appendFileSync('g/reports/web_actions.jsonl', line);
              } catch (e) {
                console.error('CI worker error:', e);
              }
            });

            // keep alive ~2 minutes for the job
            setTimeout(async () => {
              await sub.quit();
              await pub.quit();
            }, 120000);
          }

          main().catch((err) => {
            console.error('Failed to start CI worker', err);
            process.exit(1);
          });
          EOS

      - name: Init CI worker deps
        run: |
          npm init -y >/dev/null 2>&1 || true
          npm i redis@^4 -D

      - name: Run CI worker in background
        run: node knowledge/ci/browseros_worker.cjs &
      
      - name: Run Phase 7.7 test harness
        shell: bash
        run: |
          chmod +x tools/test_browseros_phase77.sh
          bash tools/test_browseros_phase77.sh

      - name: Upload reports (artifacts)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: web-actions-reports
          path: |
            g/reports/web_actions*.json*
            g/reports/web_actions*.csv*
            g/reports/phase7_7_summary.md
          if-no-files-found: warn
