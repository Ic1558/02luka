name: Deploy Dashboard

on:
  # Manual trigger via GitHub UI
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

  # Auto-deploy on main branch changes to dashboard
  push:
    branches: [main]
    paths:
      - 'boss-ui/**'
      - 'scripts/deploy_dashboard.sh'
      - '.github/workflows/deploy_dashboard.yml'

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'production' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: 'boss-ui/package-lock.json'

      - name: Install dependencies
        run: |
          cd boss-ui
          npm ci

      - name: Build dashboard
        run: |
          cd boss-ui
          npm run build

      - name: Deploy to Cloudflare Pages
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        run: |
          bash scripts/deploy_dashboard.sh

      - name: Verify deployment
        run: |
          echo "Waiting for Cloudflare propagation..."
          sleep 5

          # Health check
          HEALTH_URL="https://dashboard.theedges.work/healthz"
          if curl -sf "$HEALTH_URL" | jq .; then
            echo "‚úÖ Dashboard health check passed"
          else
            echo "‚ùå Dashboard health check failed"
            exit 1
          fi

      - name: Upload deployment report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: deployment-report-${{ github.sha }}
          path: g/reports/deploy/dashboard_*.md
          retention-days: 30

      - name: Comment on commit
        if: github.event_name == 'push'
        uses: actions/github-script@v7
        with:
          script: |
            const sha = context.sha;
            const url = 'https://dashboard.theedges.work';
            const body = `üöÄ Dashboard deployed successfully!\n\nüìç URL: ${url}\nüè• Health: ${url}/healthz\nüì¶ Commit: ${sha.substring(0, 7)}`;

            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: sha,
              body: body
            });
