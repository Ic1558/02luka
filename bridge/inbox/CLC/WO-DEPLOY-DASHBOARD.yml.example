# CLC Work Order: Dashboard Deployment
# Usage: Copy to WO-DEPLOY-DASHBOARD.yml and trigger via CLC agent
#
# Trigger methods:
#   1. Manual: mv WO-DEPLOY-DASHBOARD.yml.example WO-DEPLOY-DASHBOARD.yml
#   2. CLC CLI: clc deploy dashboard
#   3. Agent watch: CLC agent monitors bridge/inbox/CLC/ for *.yml

type: deploy
agent: CLC
target: dashboard
priority: normal
rollback_on_failure: true

metadata:
  created: 2025-10-11T18:30:00Z
  author: CLC
  project: 02luka
  tags: [dashboard, cloudflare, deployment]

environment:
  required:
    - CLOUDFLARE_API_TOKEN
    - CLOUDFLARE_ACCOUNT_ID
  validation:
    - bash scripts/validate_env.sh

steps:
  - name: Preflight
    description: Check repo health and dependencies
    run: bash ./.codex/preflight.sh
    timeout: 60s
    retry_on_failure: false

  - name: Install Dependencies
    description: Install boss-ui npm packages
    run: cd boss-ui && npm ci
    timeout: 300s
    cache_key: boss-ui-node_modules

  - name: Build Dashboard
    description: Build production assets
    run: cd boss-ui && npm run build
    timeout: 180s
    artifacts:
      - boss-ui/dist/**

  - name: Deploy to Cloudflare
    description: Push to Cloudflare Pages
    run: bash scripts/deploy_dashboard.sh
    timeout: 300s
    retry_on_failure: true
    max_retries: 2

  - name: Verify Deployment
    description: Health check and smoke test
    run: |
      sleep 5
      curl -sf https://dashboard.theedges.work/healthz | jq .
    timeout: 30s
    retry_on_failure: true
    max_retries: 3
    retry_delay: 10s

  - name: Generate Report
    description: Create deployment report
    run: |
      REPORT_FILE="g/reports/deploy/dashboard_$(date +%Y%m%d_%H%M%S).md"
      echo "Report generated: $REPORT_FILE"
    always_run: true

post_deploy:
  success:
    - git tag -a "v$(date +%y%m%d_%H%M)_dashboard_prod" -m "Dashboard prod deploy"
    - git push --tags
    - echo "✅ Dashboard deployed: https://dashboard.theedges.work"

  failure:
    - echo "❌ Deployment failed - check g/reports/deploy/"
    - bash scripts/rollback_dashboard.sh  # Future: implement rollback

notifications:
  on_success:
    - type: log
      path: $HOME/Library/Logs/02luka/com.02luka.clc.out
    - type: report
      path: g/reports/deploy/

  on_failure:
    - type: log
      path: $HOME/Library/Logs/02luka/com.02luka.clc.err
    - type: alert
      message: "Dashboard deployment failed"

rollback:
  enabled: true
  strategy: git_tag
  steps:
    - git fetch --tags
    - git checkout $(git tag -l "v*_dashboard_prod" | tail -2 | head -1)
    - bash scripts/deploy_dashboard.sh

monitoring:
  health_url: https://dashboard.theedges.work/healthz
  check_interval: 60s
  alert_on_failure: true
