#!/usr/bin/env zsh
# PR Creation Automation Script
# Usage: ./create-pr.zsh [branch-name] [pr-title] [pr-body-file]

set -euo pipefail

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Configuration
REPO="Ic1558/02luka"
DEFAULT_BASE="main"

# Function: Print colored message
log() {
    local color=$1
    shift
    echo -e "${color}$@${NC}"
}

# Check if gh CLI is authenticated
if ! gh auth status >/dev/null 2>&1; then
    log $RED "❌ Error: GitHub CLI not authenticated"
    log $YELLOW "Run: gh auth login"
    exit 1
fi

# Get current branch if not specified
BRANCH=${1:-$(git branch --show-current)}
PR_TITLE=${2:-""}
PR_BODY_FILE=${3:-""}

if [[ -z "$BRANCH" ]]; then
    log $RED "❌ Error: Could not determine branch"
    exit 1
fi

if [[ "$BRANCH" == "main" ]] || [[ "$BRANCH" == "master" ]]; then
    log $RED "❌ Error: Cannot create PR from main/master branch"
    exit 1
fi

# Check if branch exists on remote
if ! git ls-remote --heads origin "$BRANCH" | grep -q "$BRANCH"; then
    log $YELLOW "⚠️  Branch not on remote. Pushing..."
    git push -u origin "$BRANCH"
fi

# Check if PR already exists
EXISTING_PR=$(gh pr list --repo "$REPO" --head "$BRANCH" --json number --jq '.[0].number' 2>/dev/null || echo "")

if [[ -n "$EXISTING_PR" ]]; then
    log $YELLOW "⚠️  PR #$EXISTING_PR already exists for branch $BRANCH"
    gh pr view "$EXISTING_PR" --repo "$REPO"
    exit 0
fi

# Auto-generate title from branch name if not provided
if [[ -z "$PR_TITLE" ]]; then
    # Convert branch name to readable title
    # Example: feat/add-authentication -> feat: Add authentication
    PR_TITLE=$(echo "$BRANCH" | sed -E 's|^([^/]+)/(.+)|\1: \2|' | sed -E 's|-| |g' | sed -E 's/\b(.)/\u\1/g')
    log $YELLOW "📝 Auto-generated title: $PR_TITLE"
fi

# Generate PR body
if [[ -n "$PR_BODY_FILE" ]] && [[ -f "$PR_BODY_FILE" ]]; then
    PR_BODY=$(cat "$PR_BODY_FILE")
else
    # Auto-generate body from commits
    PR_BODY="## Changes

$(git log --oneline "$DEFAULT_BASE".."$BRANCH" | sed 's/^/- /')

## Testing
- [ ] Manual testing completed
- [ ] All workflows passing

## Checklist
- [ ] Code follows project style
- [ ] Documentation updated
- [ ] No breaking changes

---
🤖 Generated by PR automation"
fi

# Create PR
log $GREEN "🚀 Creating PR..."
PR_URL=$(gh pr create \
    --repo "$REPO" \
    --base "$DEFAULT_BASE" \
    --head "$BRANCH" \
    --title "$PR_TITLE" \
    --body "$PR_BODY")

if [[ $? -eq 0 ]]; then
    log $GREEN "✅ PR created successfully!"
    log $GREEN "🔗 $PR_URL"
    
    # Auto-add labels based on branch prefix
    if [[ "$BRANCH" =~ ^(feat|feature)/ ]]; then
        gh pr edit "$PR_URL" --add-label "enhancement" 2>/dev/null || true
    elif [[ "$BRANCH" =~ ^(fix|bugfix|hotfix)/ ]]; then
        gh pr edit "$PR_URL" --add-label "bug" 2>/dev/null || true
    elif [[ "$BRANCH" =~ ^(docs|doc)/ ]]; then
        gh pr edit "$PR_URL" --add-label "documentation" 2>/dev/null || true
    fi
    
    # Open PR in browser
    if [[ "${OPEN_BROWSER:-yes}" == "yes" ]]; then
        open "$PR_URL" 2>/dev/null || true
    fi
else
    log $RED "❌ Failed to create PR"
    exit 1
fi
